<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.bookstore.dao.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.example.bookstore.pojo.Comment" >
    <id column="com_id" property="comId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="book_id" property="bookId" jdbcType="INTEGER" />
    <result column="com_mess" property="comMess" jdbcType="VARCHAR" />
    <result column="com_time" property="comTime" jdbcType="TIMESTAMP" />
    <result column="com_status" property="comStatus" jdbcType="INTEGER" />
    <result column="pic_address" property="picAddress" jdbcType="VARCHAR" />
    <result column="com_reply" property="comReply" jdbcType="VARCHAR" />
    <result column="reply_time" property="replyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    com_id, user_id, book_id, com_mess, com_time, com_status, pic_address, com_reply, 
    reply_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.bookstore.pojo.CommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from comment
    where com_id = #{comId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment
    where com_id = #{comId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.bookstore.pojo.CommentExample" >
    delete from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.bookstore.pojo.Comment" >
    insert into comment (com_id, user_id, book_id, 
      com_mess, com_time, com_status, 
      pic_address, com_reply, reply_time
      )
    values (#{comId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{bookId,jdbcType=INTEGER}, 
      #{comMess,jdbcType=VARCHAR}, #{comTime,jdbcType=TIMESTAMP}, #{comStatus,jdbcType=INTEGER}, 
      #{picAddress,jdbcType=VARCHAR}, #{comReply,jdbcType=VARCHAR}, #{replyTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.bookstore.pojo.Comment" >
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="comId != null" >
        com_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="bookId != null" >
        book_id,
      </if>
      <if test="comMess != null" >
        com_mess,
      </if>
      <if test="comTime != null" >
        com_time,
      </if>
      <if test="comStatus != null" >
        com_status,
      </if>
      <if test="picAddress != null" >
        pic_address,
      </if>
      <if test="comReply != null" >
        com_reply,
      </if>
      <if test="replyTime != null" >
        reply_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="comId != null" >
        #{comId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="bookId != null" >
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="comMess != null" >
        #{comMess,jdbcType=VARCHAR},
      </if>
      <if test="comTime != null" >
        #{comTime,jdbcType=TIMESTAMP},
      </if>
      <if test="comStatus != null" >
        #{comStatus,jdbcType=INTEGER},
      </if>
      <if test="picAddress != null" >
        #{picAddress,jdbcType=VARCHAR},
      </if>
      <if test="comReply != null" >
        #{comReply,jdbcType=VARCHAR},
      </if>
      <if test="replyTime != null" >
        #{replyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.bookstore.pojo.CommentExample" resultType="java.lang.Integer" >
    select count(*) from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update comment
    <set >
      <if test="record.comId != null" >
        com_id = #{record.comId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.bookId != null" >
        book_id = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.comMess != null" >
        com_mess = #{record.comMess,jdbcType=VARCHAR},
      </if>
      <if test="record.comTime != null" >
        com_time = #{record.comTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.comStatus != null" >
        com_status = #{record.comStatus,jdbcType=INTEGER},
      </if>
      <if test="record.picAddress != null" >
        pic_address = #{record.picAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.comReply != null" >
        com_reply = #{record.comReply,jdbcType=VARCHAR},
      </if>
      <if test="record.replyTime != null" >
        reply_time = #{record.replyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update comment
    set com_id = #{record.comId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      book_id = #{record.bookId,jdbcType=INTEGER},
      com_mess = #{record.comMess,jdbcType=VARCHAR},
      com_time = #{record.comTime,jdbcType=TIMESTAMP},
      com_status = #{record.comStatus,jdbcType=INTEGER},
      pic_address = #{record.picAddress,jdbcType=VARCHAR},
      com_reply = #{record.comReply,jdbcType=VARCHAR},
      reply_time = #{record.replyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.bookstore.pojo.Comment" >
    update comment
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="bookId != null" >
        book_id = #{bookId,jdbcType=INTEGER},
      </if>
      <if test="comMess != null" >
        com_mess = #{comMess,jdbcType=VARCHAR},
      </if>
      <if test="comTime != null" >
        com_time = #{comTime,jdbcType=TIMESTAMP},
      </if>
      <if test="comStatus != null" >
        com_status = #{comStatus,jdbcType=INTEGER},
      </if>
      <if test="picAddress != null" >
        pic_address = #{picAddress,jdbcType=VARCHAR},
      </if>
      <if test="comReply != null" >
        com_reply = #{comReply,jdbcType=VARCHAR},
      </if>
      <if test="replyTime != null" >
        reply_time = #{replyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where com_id = #{comId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.bookstore.pojo.Comment" >
    update comment
    set user_id = #{userId,jdbcType=VARCHAR},
      book_id = #{bookId,jdbcType=INTEGER},
      com_mess = #{comMess,jdbcType=VARCHAR},
      com_time = #{comTime,jdbcType=TIMESTAMP},
      com_status = #{comStatus,jdbcType=INTEGER},
      pic_address = #{picAddress,jdbcType=VARCHAR},
      com_reply = #{comReply,jdbcType=VARCHAR},
      reply_time = #{replyTime,jdbcType=TIMESTAMP}
    where com_id = #{comId,jdbcType=INTEGER}
  </update>
</mapper>